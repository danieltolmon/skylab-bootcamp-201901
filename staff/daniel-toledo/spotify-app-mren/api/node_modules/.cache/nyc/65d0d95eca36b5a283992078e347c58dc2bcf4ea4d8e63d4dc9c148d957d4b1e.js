'use strict';/**
 * Spotify API client.
 * 
 * @version 2.1.0
 */var cov_11n8bj1wm4=function(){var path="C:\\Users\\Supernova\\bootcamp\\collab\\skylab-bootcamp-201901\\staff\\daniel-toledo\\spotify-app-mren\\api\\src\\spotify-api\\index.js";var hash="60e61ee7a08be23b3466ba150ef361a36f7f92d6";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Supernova\\bootcamp\\collab\\skylab-bootcamp-201901\\staff\\daniel-toledo\\spotify-app-mren\\api\\src\\spotify-api\\index.js",statementMap:{"0":{start:{line:8,column:19},end:{line:152,column:1}},"1":{start:{line:22,column:8},end:{line:22,column:82}},"2":{start:{line:22,column:39},end:{line:22,column:82}},"3":{start:{line:24,column:8},end:{line:24,column:63}},"4":{start:{line:24,column:34},end:{line:24,column:63}},"5":{start:{line:26,column:8},end:{line:38,column:14}},"6":{start:{line:31,column:30},end:{line:31,column:45}},"7":{start:{line:33,column:16},end:{line:33,column:71}},"8":{start:{line:33,column:36},end:{line:33,column:71}},"9":{start:{line:35,column:47},end:{line:35,column:55}},"10":{start:{line:37,column:16},end:{line:37,column:28}},"11":{start:{line:51,column:8},end:{line:51,column:88}},"12":{start:{line:51,column:42},end:{line:51,column:88}},"13":{start:{line:53,column:8},end:{line:53,column:69}},"14":{start:{line:53,column:37},end:{line:53,column:69}},"15":{start:{line:55,column:8},end:{line:60,column:46}},"16":{start:{line:60,column:30},end:{line:60,column:45}},"17":{start:{line:73,column:8},end:{line:73,column:88}},"18":{start:{line:73,column:42},end:{line:73,column:88}},"19":{start:{line:75,column:8},end:{line:75,column:69}},"20":{start:{line:75,column:37},end:{line:75,column:69}},"21":{start:{line:77,column:8},end:{line:83,column:39}},"22":{start:{line:82,column:30},end:{line:82,column:45}},"23":{start:{line:83,column:33},end:{line:83,column:38}},"24":{start:{line:96,column:8},end:{line:96,column:86}},"25":{start:{line:96,column:41},end:{line:96,column:86}},"26":{start:{line:98,column:8},end:{line:98,column:67}},"27":{start:{line:98,column:36},end:{line:98,column:67}},"28":{start:{line:100,column:8},end:{line:105,column:46}},"29":{start:{line:105,column:30},end:{line:105,column:45}},"30":{start:{line:118,column:8},end:{line:118,column:86}},"31":{start:{line:118,column:41},end:{line:118,column:86}},"32":{start:{line:120,column:8},end:{line:120,column:67}},"33":{start:{line:120,column:36},end:{line:120,column:67}},"34":{start:{line:122,column:8},end:{line:128,column:39}},"35":{start:{line:127,column:30},end:{line:127,column:45}},"36":{start:{line:128,column:33},end:{line:128,column:38}},"37":{start:{line:141,column:8},end:{line:141,column:86}},"38":{start:{line:141,column:41},end:{line:141,column:86}},"39":{start:{line:143,column:8},end:{line:143,column:67}},"40":{start:{line:143,column:36},end:{line:143,column:67}},"41":{start:{line:145,column:8},end:{line:150,column:46}},"42":{start:{line:150,column:30},end:{line:150,column:45}},"43":{start:{line:154,column:0},end:{line:154,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:25},end:{line:39,column:5}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:18},end:{line:31,column:19}},loc:{start:{line:31,column:30},end:{line:31,column:45}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:32,column:18},end:{line:32,column:19}},loc:{start:{line:32,column:30},end:{line:38,column:13}},line:32},"3":{name:"(anonymous_3)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:29},end:{line:61,column:5}},line:50},"4":{name:"(anonymous_4)",decl:{start:{line:60,column:18},end:{line:60,column:19}},loc:{start:{line:60,column:30},end:{line:60,column:45}},line:60},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:4},end:{line:72,column:5}},loc:{start:{line:72,column:29},end:{line:84,column:5}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:82,column:18},end:{line:82,column:19}},loc:{start:{line:82,column:30},end:{line:82,column:45}},line:82},"7":{name:"(anonymous_7)",decl:{start:{line:83,column:18},end:{line:83,column:19}},loc:{start:{line:83,column:33},end:{line:83,column:38}},line:83},"8":{name:"(anonymous_8)",decl:{start:{line:95,column:4},end:{line:95,column:5}},loc:{start:{line:95,column:27},end:{line:106,column:5}},line:95},"9":{name:"(anonymous_9)",decl:{start:{line:105,column:18},end:{line:105,column:19}},loc:{start:{line:105,column:30},end:{line:105,column:45}},line:105},"10":{name:"(anonymous_10)",decl:{start:{line:117,column:4},end:{line:117,column:5}},loc:{start:{line:117,column:28},end:{line:129,column:5}},line:117},"11":{name:"(anonymous_11)",decl:{start:{line:127,column:18},end:{line:127,column:19}},loc:{start:{line:127,column:30},end:{line:127,column:45}},line:127},"12":{name:"(anonymous_12)",decl:{start:{line:128,column:18},end:{line:128,column:19}},loc:{start:{line:128,column:33},end:{line:128,column:38}},line:128},"13":{name:"(anonymous_13)",decl:{start:{line:140,column:4},end:{line:140,column:5}},loc:{start:{line:140,column:27},end:{line:151,column:5}},line:140},"14":{name:"(anonymous_14)",decl:{start:{line:150,column:18},end:{line:150,column:19}},loc:{start:{line:150,column:30},end:{line:150,column:45}},line:150}},branchMap:{"0":{loc:{start:{line:22,column:8},end:{line:22,column:82}},type:"if",locations:[{start:{line:22,column:8},end:{line:22,column:82}},{start:{line:22,column:8},end:{line:22,column:82}}],line:22},"1":{loc:{start:{line:24,column:8},end:{line:24,column:63}},type:"if",locations:[{start:{line:24,column:8},end:{line:24,column:63}},{start:{line:24,column:8},end:{line:24,column:63}}],line:24},"2":{loc:{start:{line:33,column:16},end:{line:33,column:71}},type:"if",locations:[{start:{line:33,column:16},end:{line:33,column:71}},{start:{line:33,column:16},end:{line:33,column:71}}],line:33},"3":{loc:{start:{line:51,column:8},end:{line:51,column:88}},type:"if",locations:[{start:{line:51,column:8},end:{line:51,column:88}},{start:{line:51,column:8},end:{line:51,column:88}}],line:51},"4":{loc:{start:{line:53,column:8},end:{line:53,column:69}},type:"if",locations:[{start:{line:53,column:8},end:{line:53,column:69}},{start:{line:53,column:8},end:{line:53,column:69}}],line:53},"5":{loc:{start:{line:73,column:8},end:{line:73,column:88}},type:"if",locations:[{start:{line:73,column:8},end:{line:73,column:88}},{start:{line:73,column:8},end:{line:73,column:88}}],line:73},"6":{loc:{start:{line:75,column:8},end:{line:75,column:69}},type:"if",locations:[{start:{line:75,column:8},end:{line:75,column:69}},{start:{line:75,column:8},end:{line:75,column:69}}],line:75},"7":{loc:{start:{line:96,column:8},end:{line:96,column:86}},type:"if",locations:[{start:{line:96,column:8},end:{line:96,column:86}},{start:{line:96,column:8},end:{line:96,column:86}}],line:96},"8":{loc:{start:{line:98,column:8},end:{line:98,column:67}},type:"if",locations:[{start:{line:98,column:8},end:{line:98,column:67}},{start:{line:98,column:8},end:{line:98,column:67}}],line:98},"9":{loc:{start:{line:118,column:8},end:{line:118,column:86}},type:"if",locations:[{start:{line:118,column:8},end:{line:118,column:86}},{start:{line:118,column:8},end:{line:118,column:86}}],line:118},"10":{loc:{start:{line:120,column:8},end:{line:120,column:67}},type:"if",locations:[{start:{line:120,column:8},end:{line:120,column:67}},{start:{line:120,column:8},end:{line:120,column:67}}],line:120},"11":{loc:{start:{line:141,column:8},end:{line:141,column:86}},type:"if",locations:[{start:{line:141,column:8},end:{line:141,column:86}},{start:{line:141,column:8},end:{line:141,column:86}}],line:141},"12":{loc:{start:{line:143,column:8},end:{line:143,column:67}},type:"if",locations:[{start:{line:143,column:8},end:{line:143,column:67}},{start:{line:143,column:8},end:{line:143,column:67}}],line:143}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const spotifyApi=(cov_11n8bj1wm4.s[0]++,{token:'NO-TOKEN',url:'https://api.spotify.com/v1',/**
     * Searches artists.
     * 
     * @param {string} query - The text to match on artists search.
     * @retuns {Promise} - Resolves with artists, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */searchArtists(query){cov_11n8bj1wm4.f[0]++;cov_11n8bj1wm4.s[1]++;if(typeof query!=='string'){cov_11n8bj1wm4.b[0][0]++;cov_11n8bj1wm4.s[2]++;throw TypeError(`${query} is not a string`);}else{cov_11n8bj1wm4.b[0][1]++;}cov_11n8bj1wm4.s[3]++;if(!query.trim().length){cov_11n8bj1wm4.b[1][0]++;cov_11n8bj1wm4.s[4]++;throw Error('query is empty');}else{cov_11n8bj1wm4.b[1][1]++;}cov_11n8bj1wm4.s[5]++;return fetch(`${this.url}/search?q=${query}&type=artist`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[1]++;cov_11n8bj1wm4.s[6]++;return response.json();}).then(response=>{cov_11n8bj1wm4.f[2]++;cov_11n8bj1wm4.s[7]++;if(response.error){cov_11n8bj1wm4.b[2][0]++;cov_11n8bj1wm4.s[8]++;throw Error(response.error.message);}else{cov_11n8bj1wm4.b[2][1]++;}const{artists:{items}}=(cov_11n8bj1wm4.s[9]++,response);cov_11n8bj1wm4.s[10]++;return items;});},/**
     * Retrieves an artist.
     * 
     * @param {string} artistId - The artist to retrieve.
     * @returns {Promise} - Resolves with albums, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */retrieveArtist(artistId){cov_11n8bj1wm4.f[3]++;cov_11n8bj1wm4.s[11]++;if(typeof artistId!=='string'){cov_11n8bj1wm4.b[3][0]++;cov_11n8bj1wm4.s[12]++;throw TypeError(`${artistId} is not a string`);}else{cov_11n8bj1wm4.b[3][1]++;}cov_11n8bj1wm4.s[13]++;if(!artistId.trim().length){cov_11n8bj1wm4.b[4][0]++;cov_11n8bj1wm4.s[14]++;throw Error('artistId is empty');}else{cov_11n8bj1wm4.b[4][1]++;}cov_11n8bj1wm4.s[15]++;return fetch(`${this.url}/artists/${artistId}`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[4]++;cov_11n8bj1wm4.s[16]++;return response.json();});},/**
     * Retrieves albums from artist.
     * 
     * @param {string} artistId - The artist to retrieve albums from.
     * @returns {Promise} - Resolves with albums, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */retrieveAlbums(artistId){cov_11n8bj1wm4.f[5]++;cov_11n8bj1wm4.s[17]++;if(typeof artistId!=='string'){cov_11n8bj1wm4.b[5][0]++;cov_11n8bj1wm4.s[18]++;throw TypeError(`${artistId} is not a string`);}else{cov_11n8bj1wm4.b[5][1]++;}cov_11n8bj1wm4.s[19]++;if(!artistId.trim().length){cov_11n8bj1wm4.b[6][0]++;cov_11n8bj1wm4.s[20]++;throw Error('artistId is empty');}else{cov_11n8bj1wm4.b[6][1]++;}cov_11n8bj1wm4.s[21]++;return fetch(`${this.url}/artists/${artistId}/albums`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[6]++;cov_11n8bj1wm4.s[22]++;return response.json();}).then(({items})=>{cov_11n8bj1wm4.f[7]++;cov_11n8bj1wm4.s[23]++;return items;});},/**
     * Retrieves an album.
     * 
     * @param {string} albumId - The album to retrieve.
     * @preturns {Promise} - Resolves with tracks, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */retrieveAlbum(albumId){cov_11n8bj1wm4.f[8]++;cov_11n8bj1wm4.s[24]++;if(typeof albumId!=='string'){cov_11n8bj1wm4.b[7][0]++;cov_11n8bj1wm4.s[25]++;throw TypeError(`${albumId} is not a string`);}else{cov_11n8bj1wm4.b[7][1]++;}cov_11n8bj1wm4.s[26]++;if(!albumId.trim().length){cov_11n8bj1wm4.b[8][0]++;cov_11n8bj1wm4.s[27]++;throw Error('albumId is empty');}else{cov_11n8bj1wm4.b[8][1]++;}cov_11n8bj1wm4.s[28]++;return fetch(`${this.url}/albums/${albumId}`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[9]++;cov_11n8bj1wm4.s[29]++;return response.json();});},/**
     * Retrieves tracks from album.
     * 
     * @param {string} albumId - The album to retrieve tracks from.
     * @preturns {Promise} - Resolves with tracks, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */retrieveTracks(albumId){cov_11n8bj1wm4.f[10]++;cov_11n8bj1wm4.s[30]++;if(typeof albumId!=='string'){cov_11n8bj1wm4.b[9][0]++;cov_11n8bj1wm4.s[31]++;throw TypeError(`${albumId} is not a string`);}else{cov_11n8bj1wm4.b[9][1]++;}cov_11n8bj1wm4.s[32]++;if(!albumId.trim().length){cov_11n8bj1wm4.b[10][0]++;cov_11n8bj1wm4.s[33]++;throw Error('albumId is empty');}else{cov_11n8bj1wm4.b[10][1]++;}cov_11n8bj1wm4.s[34]++;return fetch(`${this.url}/albums/${albumId}/tracks`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[11]++;cov_11n8bj1wm4.s[35]++;return response.json();}).then(({items})=>{cov_11n8bj1wm4.f[12]++;cov_11n8bj1wm4.s[36]++;return items;});},/**
     * Retrieves track.
     * 
     * @param {string} trackId - The id of the track to be retrieved.
     * @returns {Promise} Resolves with track, otherwise rejects with error.
     * 
     * @throws {TypeError} - On wrong parameters type.
     * @throws {Error} - On empty parameters value.
     */retrieveTrack(trackId){cov_11n8bj1wm4.f[13]++;cov_11n8bj1wm4.s[37]++;if(typeof trackId!=='string'){cov_11n8bj1wm4.b[11][0]++;cov_11n8bj1wm4.s[38]++;throw TypeError(`${trackId} is not a string`);}else{cov_11n8bj1wm4.b[11][1]++;}cov_11n8bj1wm4.s[39]++;if(!trackId.trim().length){cov_11n8bj1wm4.b[12][0]++;cov_11n8bj1wm4.s[40]++;throw Error('trackId is empty');}else{cov_11n8bj1wm4.b[12][1]++;}cov_11n8bj1wm4.s[41]++;return fetch(`${this.url}/tracks/${trackId}`,{headers:{authorization:`Bearer ${this.token}`}}).then(response=>{cov_11n8bj1wm4.f[14]++;cov_11n8bj1wm4.s[42]++;return response.json();});}});cov_11n8bj1wm4.s[43]++;module.exports=spotifyApi;